{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Register\",\n  data() {\n    let validateConfirmPass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        role: 'BUSINESS',\n        username: '',\n        password: '',\n        confirmPass: '',\n        question1: '',\n        answer1: '',\n        question2: '',\n        answer2: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在3到10个字符内',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 8,\n          max: 16,\n          message: '长度在8到16个字符内',\n          trigger: 'blur'\n        }],\n        confirmPass: [{\n          required: true,\n          message: '请确认密码',\n          trigger: 'blur'\n        }, {\n          min: 8,\n          max: 16,\n          message: '长度在8到16个字符内',\n          trigger: 'blur'\n        }, {\n          validator: validateConfirmPass,\n          trigger: 'blur'\n        }],\n        question1: [{\n          required: true,\n          message: '请输入问题1',\n          trigger: 'blur'\n        }],\n        answer1: [{\n          required: true,\n          message: '请输入答案1',\n          trigger: 'blur'\n        }],\n        question2: [{\n          required: true,\n          message: '请输入问题2',\n          trigger: 'blur'\n        }],\n        answer2: [{\n          required: true,\n          message: '请输入答案2',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    register() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证问题不能重复\n          if (this.form.question1 === this.form.question2) {\n            this.$message.error('两个问题不能相同');\n            return;\n          }\n\n          // 构造提交的数据\n          const submitData = {\n            ...this.form,\n            question: JSON.stringify([{\n              question: this.form.question1,\n              answer: this.form.answer1\n            }, {\n              question: this.form.question2,\n              answer: this.form.answer2\n            }])\n          };\n\n          // 删除临时字段\n          delete submitData.question1;\n          delete submitData.question2;\n          delete submitData.answer1;\n          delete submitData.answer2;\n          delete submitData.confirmPass;\n\n          // 验证通过\n          this.$request.post('/register', submitData).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/login'); // 跳转登录\n              this.$message.success('成功注册，请登录');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validateConfirmPass","rule","value","callback","Error","form","password","role","username","confirmPass","question1","answer1","question2","answer2","rules","required","message","trigger","min","max","validator","created","methods","register","$refs","validate","valid","$message","error","submitData","question","JSON","stringify","answer","$request","post","then","res","code","$router","push","success","msg"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 400px; padding: 30px; background-color: white; border-radius: 5px;\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #333\">欢迎注册</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"confirmPass\">\r\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请确认密码\" show-password  v-model=\"form.confirmPass\"></el-input>\r\n        </el-form-item>\r\n\r\n        <!-- 凭证问题1 -->\r\n        <div style=\"margin: 15px 0; font-size: 14px; color: #666;\">凭证问题1</div>\r\n        <el-form-item prop=\"question1\">\r\n          <el-input placeholder=\"请输入问题1\" v-model=\"form.question1\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"answer1\">\r\n          <el-input placeholder=\"请输入答案1\" v-model=\"form.answer1\"></el-input>\r\n        </el-form-item>\r\n\r\n        <!-- 凭证问题2 -->\r\n        <div style=\"margin: 15px 0; font-size: 14px; color: #666;\">凭证问题2</div>\r\n        <el-form-item prop=\"question2\">\r\n          <el-input placeholder=\"请输入问题2\" v-model=\"form.question2\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"answer2\">\r\n          <el-input placeholder=\"请输入答案2\" v-model=\"form.answer2\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%; background-color: #333; border-color: #333; color: white\" @click=\"register\">注 册</el-button>\r\n        </el-form-item>\r\n        <div style=\"display: flex; align-items: center\">\r\n          <div style=\"flex: 1\"></div>\r\n          <div style=\"flex: 1; text-align: right\">\r\n            已有账号？请 <a href=\"/login\">登录</a>\r\n          </div>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    let validateConfirmPass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.form.password) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n    return {\r\n      form: { \r\n        role: 'BUSINESS',\r\n        username: '',\r\n        password: '',\r\n        confirmPass: '',\r\n        question1: '',\r\n        answer1: '',\r\n        question2: '',\r\n        answer2: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n          { min:3, max: 10, message: '长度在3到10个字符内', trigger: 'blur'}\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min:8, max: 16, message: '长度在8到16个字符内', trigger: 'blur'}\r\n        ],\r\n        confirmPass: [\r\n          { required: true, message: '请确认密码', trigger: 'blur' },\r\n          { min:8, max: 16, message: '长度在8到16个字符内', trigger: 'blur'},\r\n          { validator: validateConfirmPass, trigger: 'blur'}\r\n        ],\r\n        question1: [\r\n          { required: true, message: '请输入问题1', trigger: 'blur' }\r\n        ],\r\n        answer1: [\r\n          { required: true, message: '请输入答案1', trigger: 'blur' }\r\n        ],\r\n        question2: [\r\n          { required: true, message: '请输入问题2', trigger: 'blur' }\r\n        ],\r\n        answer2: [\r\n          { required: true, message: '请输入答案2', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    register() {\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 验证问题不能重复\r\n          if (this.form.question1 === this.form.question2) {\r\n            this.$message.error('两个问题不能相同')\r\n            return\r\n          }\r\n\r\n          // 构造提交的数据\r\n          const submitData = {\r\n            ...this.form,\r\n            question: JSON.stringify([\r\n              {\r\n                question: this.form.question1,\r\n                answer: this.form.answer1\r\n              },\r\n              {\r\n                question: this.form.question2,\r\n                answer: this.form.answer2\r\n              }\r\n            ])\r\n          }\r\n          \r\n          // 删除临时字段\r\n          delete submitData.question1\r\n          delete submitData.question2\r\n          delete submitData.answer1\r\n          delete submitData.answer2\r\n          delete submitData.confirmPass\r\n\r\n          // 验证通过\r\n          this.$request.post('/register', submitData).then(res => {\r\n            if (res.code === '200') {\r\n              this.$router.push('/login')  // 跳转登录\r\n              this.$message.success('成功注册，请登录')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/bg.jpg\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\na {\r\n  color: #2a60c9;\r\n}\r\n</style>"],"mappings":";AAgDA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,mBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,IAAA,CAAAC,QAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,IAAA;QACAE,IAAA;QACAC,QAAA;QACAF,QAAA;QACAG,WAAA;QACAC,SAAA;QACAC,OAAA;QACAC,SAAA;QACAC,OAAA;MACA;MACAC,KAAA;QACAN,QAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAX,QAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,WAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,SAAA,EAAApB,mBAAA;UAAAiB,OAAA;QAAA,EACA;QACAP,SAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,OAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,SAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,OAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAI,QAAA,GAEA;EACAC,OAAA;IACAC,SAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,SAAArB,IAAA,CAAAK,SAAA,UAAAL,IAAA,CAAAO,SAAA;YACA,KAAAe,QAAA,CAAAC,KAAA;YACA;UACA;;UAEA;UACA,MAAAC,UAAA;YACA,QAAAxB,IAAA;YACAyB,QAAA,EAAAC,IAAA,CAAAC,SAAA,EACA;cACAF,QAAA,OAAAzB,IAAA,CAAAK,SAAA;cACAuB,MAAA,OAAA5B,IAAA,CAAAM;YACA,GACA;cACAmB,QAAA,OAAAzB,IAAA,CAAAO,SAAA;cACAqB,MAAA,OAAA5B,IAAA,CAAAQ;YACA,EACA;UACA;;UAEA;UACA,OAAAgB,UAAA,CAAAnB,SAAA;UACA,OAAAmB,UAAA,CAAAjB,SAAA;UACA,OAAAiB,UAAA,CAAAlB,OAAA;UACA,OAAAkB,UAAA,CAAAhB,OAAA;UACA,OAAAgB,UAAA,CAAApB,WAAA;;UAEA;UACA,KAAAyB,QAAA,CAAAC,IAAA,cAAAN,UAAA,EAAAO,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA,KAAAb,QAAA,CAAAc,OAAA;YACA;cACA,KAAAd,QAAA,CAAAC,KAAA,CAAAS,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      orderNum: 0,\n      income: 0,\n      hotGoodsChart: null,\n      notifications: [],\n      // 通知列表\n      showNotifications: false // 控制通知列表显示\n    };\n  },\n\n  created() {\n    this.loadNotices();\n    this.loadOrderNum();\n    this.loadIncome();\n    this.loadHotGoods();\n    this.loadNotifications(); // 加载通知\n  },\n\n  mounted() {\n    // 初始化图表\n    this.initChart();\n    // 监听窗口大小变化，重绘图表\n    window.addEventListener('resize', this.resizeChart);\n  },\n  beforeDestroy() {\n    // 组件销毁前移除事件监听\n    window.removeEventListener('resize', this.resizeChart);\n    // 销毁图表实例\n    if (this.hotGoodsChart) {\n      this.hotGoodsChart.dispose();\n    }\n  },\n  methods: {\n    // 加载公告列表\n    loadNotices() {\n      this.$request.get('/notice/selectAll').then(res => {\n        this.notices = res.data || [];\n      });\n    },\n    // 加载订单总数\n    loadOrderNum() {\n      this.$request.post('/report/generateOrderNum').then(res => {\n        if (res.code === '200') {\n          this.orderNum = res.data || 0;\n        }\n      });\n    },\n    // 加载收入总数\n    loadIncome() {\n      this.$request.post('/report/income').then(res => {\n        if (res.code === '200') {\n          this.income = res.data || 0;\n        }\n      });\n    },\n    // 加载热门产品数据\n    loadHotGoods() {\n      this.$request.post('/report/hotGoods').then(res => {\n        if (res.code === '200') {\n          this.updateChart(res.data || []);\n        }\n      });\n    },\n    // 初始化图表\n    initChart() {\n      this.hotGoodsChart = echarts.init(this.$refs.hotGoodsChart);\n      this.updateChart([]);\n    },\n    // 更新图表数据\n    updateChart(data) {\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          right: 10,\n          top: 'center'\n        },\n        series: [{\n          name: '热门产品',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '18',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: data.map(item => ({\n            name: item.goodsName,\n            value: item.nums\n          }))\n        }]\n      };\n      this.hotGoodsChart.setOption(option);\n    },\n    // 重绘图表\n    resizeChart() {\n      if (this.hotGoodsChart) {\n        this.hotGoodsChart.resize();\n      }\n    },\n    // 加载通知列表\n    loadNotifications() {\n      this.$request.get('/orderNotic/getAll').then(res => {\n        if (res.code === '200') {\n          this.notifications = res.data || [];\n        }\n      });\n    },\n    // 删除通知\n    deleteNotification(id) {\n      this.$confirm('确认删除该通知吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$request.post('/orderNotic/logicDel', {\n          id\n        }).then(res => {\n          if (res.code === '200') {\n            this.$message.success('删除成功');\n            this.loadNotifications(); // 重新加载通知列表\n          }\n        });\n      }).catch(() => {});\n    },\n    // 清空所有通知\n    clearAllNotifications() {\n      this.$confirm('确认清空所有通知吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 逐个删除通知\n        const deletePromises = this.notifications.map(item => this.$request.post('/orderNotic/logicDel', {\n          id: item.id\n        }));\n        Promise.all(deletePromises).then(() => {\n          this.$message.success('清空成功');\n          this.loadNotifications(); // 重新加载通知列表\n        });\n      }).catch(() => {});\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","user","JSON","parse","localStorage","getItem","notices","orderNum","income","hotGoodsChart","notifications","showNotifications","created","loadNotices","loadOrderNum","loadIncome","loadHotGoods","loadNotifications","mounted","initChart","window","addEventListener","resizeChart","beforeDestroy","removeEventListener","dispose","methods","$request","get","then","res","post","code","updateChart","init","$refs","option","tooltip","trigger","formatter","legend","orient","right","top","series","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","emphasis","fontSize","fontWeight","labelLine","map","item","goodsName","value","nums","setOption","resize","deleteNotification","id","$confirm","confirmButtonText","cancelButtonText","$message","success","catch","clearAllNotifications","deletePromises","Promise","all"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"card\" style=\"padding: 15px; display: flex; justify-content: space-between; align-items: center\">\r\n      <div>您好，{{ user?.name }}！欢迎使用本系统</div>\r\n      <!-- 通知图标 -->\r\n      <el-badge :value=\"notifications.length\" :hidden=\"notifications.length === 0\" class=\"notice-badge\">\r\n        <el-popover\r\n          placement=\"bottom\"\r\n          width=\"400\"\r\n          trigger=\"click\"\r\n          v-model=\"showNotifications\">\r\n          <div class=\"notification-list\">\r\n            <div class=\"notification-header\">\r\n              <span>订单通知</span>\r\n              <el-button type=\"text\" @click=\"clearAllNotifications\" v-if=\"notifications.length > 0\">清空</el-button>\r\n            </div>\r\n            <div v-if=\"notifications.length === 0\" class=\"empty-notice\">\r\n              暂无通知\r\n            </div>\r\n            <div v-else class=\"notification-items\">\r\n              <div v-for=\"item in notifications\" :key=\"item.id\" class=\"notification-item\">\r\n                <div class=\"notification-content\">\r\n                  <div class=\"notification-title\">\r\n                    <span>订单号：{{ item.orderNo }}</span>\r\n                    <el-button type=\"text\" size=\"mini\" @click=\"deleteNotification(item.id)\">删除</el-button>\r\n                  </div>\r\n                  <div class=\"notification-info\">\r\n                    <div>商品：{{ item.name }}</div>\r\n                    <div>金额：¥{{ item.actual }}</div>\r\n                    <div>状态：{{ item.status }}</div>\r\n                    <div>时间：{{ item.time }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <el-button slot=\"reference\" type=\"text\" class=\"notice-button\">\r\n            <i class=\"el-icon-bell\" style=\"font-size: 20px\"></i>\r\n          </el-button>\r\n        </el-popover>\r\n      </el-badge>\r\n    </div>\r\n\r\n    <div style=\"display: flex; margin: 10px 0; gap: 20px\">\r\n      <!-- 左侧公告列表 -->\r\n      <div style=\"width: 50%;\" class=\"card\">\r\n        <div style=\"margin-bottom: 30px; font-size: 20px; font-weight: bold\">公告列表</div>\r\n        <div>\r\n          <el-timeline reverse slot=\"reference\">\r\n            <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\r\n              <el-popover placement=\"right\" width=\"200\" trigger=\"hover\" :content=\"item.content\">\r\n                <span slot=\"reference\">{{ item.title }}</span>\r\n              </el-popover>\r\n            </el-timeline-item>\r\n          </el-timeline>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧统计和图表 -->\r\n      <div style=\"width: 50%;\">\r\n        <!-- 统计卡片 -->\r\n        <div style=\"display: flex; gap: 20px; margin-bottom: 20px\">\r\n          <div class=\"card\" style=\"flex: 1; padding: 20px\">\r\n            <div style=\"font-size: 16px; color: #666; margin-bottom: 10px\">订单总数</div>\r\n            <div style=\"font-size: 24px; font-weight: bold; color: #409EFF\">{{ orderNum }}</div>\r\n          </div>\r\n          <div class=\"card\" style=\"flex: 1; padding: 20px\">\r\n            <div style=\"font-size: 16px; color: #666; margin-bottom: 10px\">收入总数</div>\r\n            <div style=\"font-size: 24px; font-weight: bold; color: #67C23A\">¥{{ income }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 热门产品图表 -->\r\n        <div class=\"card\" style=\"padding: 20px\">\r\n          <div style=\"font-size: 20px; font-weight: bold; margin-bottom: 20px\">热门产品统计</div>\r\n          <div ref=\"hotGoodsChart\" style=\"width: 100%; height: 300px\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      notices: [],\r\n      orderNum: 0,\r\n      income: 0,\r\n      hotGoodsChart: null,\r\n      notifications: [], // 通知列表\r\n      showNotifications: false // 控制通知列表显示\r\n    }\r\n  },\r\n  created() {\r\n    this.loadNotices()\r\n    this.loadOrderNum()\r\n    this.loadIncome()\r\n    this.loadHotGoods()\r\n    this.loadNotifications() // 加载通知\r\n  },\r\n  mounted() {\r\n    // 初始化图表\r\n    this.initChart()\r\n    // 监听窗口大小变化，重绘图表\r\n    window.addEventListener('resize', this.resizeChart)\r\n  },\r\n  beforeDestroy() {\r\n    // 组件销毁前移除事件监听\r\n    window.removeEventListener('resize', this.resizeChart)\r\n    // 销毁图表实例\r\n    if (this.hotGoodsChart) {\r\n      this.hotGoodsChart.dispose()\r\n    }\r\n  },\r\n  methods: {\r\n    // 加载公告列表\r\n    loadNotices() {\r\n      this.$request.get('/notice/selectAll').then(res => {\r\n        this.notices = res.data || []\r\n      })\r\n    },\r\n    // 加载订单总数\r\n    loadOrderNum() {\r\n      this.$request.post('/report/generateOrderNum').then(res => {\r\n        if (res.code === '200') {\r\n          this.orderNum = res.data || 0\r\n        }\r\n      })\r\n    },\r\n    // 加载收入总数\r\n    loadIncome() {\r\n      this.$request.post('/report/income').then(res => {\r\n        if (res.code === '200') {\r\n          this.income = res.data || 0\r\n        }\r\n      })\r\n    },\r\n    // 加载热门产品数据\r\n    loadHotGoods() {\r\n      this.$request.post('/report/hotGoods').then(res => {\r\n        if (res.code === '200') {\r\n          this.updateChart(res.data || [])\r\n        }\r\n      })\r\n    },\r\n    // 初始化图表\r\n    initChart() {\r\n      this.hotGoodsChart = echarts.init(this.$refs.hotGoodsChart)\r\n      this.updateChart([])\r\n    },\r\n    // 更新图表数据\r\n    updateChart(data) {\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          right: 10,\r\n          top: 'center'\r\n        },\r\n        series: [\r\n          {\r\n            name: '热门产品',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '18',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: data.map(item => ({\r\n              name: item.goodsName,\r\n              value: item.nums\r\n            }))\r\n          }\r\n        ]\r\n      }\r\n      this.hotGoodsChart.setOption(option)\r\n    },\r\n    // 重绘图表\r\n    resizeChart() {\r\n      if (this.hotGoodsChart) {\r\n        this.hotGoodsChart.resize()\r\n      }\r\n    },\r\n    // 加载通知列表\r\n    loadNotifications() {\r\n      this.$request.get('/orderNotic/getAll').then(res => {\r\n        if (res.code === '200') {\r\n          this.notifications = res.data || []\r\n        }\r\n      })\r\n    },\r\n    // 删除通知\r\n    deleteNotification(id) {\r\n      this.$confirm('确认删除该通知吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$request.post('/orderNotic/logicDel', { id }).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success('删除成功')\r\n            this.loadNotifications() // 重新加载通知列表\r\n          }\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    // 清空所有通知\r\n    clearAllNotifications() {\r\n      this.$confirm('确认清空所有通知吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        // 逐个删除通知\r\n        const deletePromises = this.notifications.map(item => \r\n          this.$request.post('/orderNotic/logicDel', { id: item.id })\r\n        )\r\n        Promise.all(deletePromises).then(() => {\r\n          this.$message.success('清空成功')\r\n          this.loadNotifications() // 重新加载通知列表\r\n        })\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.notice-badge {\r\n  margin-right: 20px;\r\n}\r\n\r\n.notice-button {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.notification-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.notification-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #eee;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.notification-items {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.notification-item {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.notification-title {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.notification-info {\r\n  font-size: 13px;\r\n  color: #666;\r\n  line-height: 1.5;\r\n}\r\n\r\n.empty-notice {\r\n  text-align: center;\r\n  color: #999;\r\n  padding: 20px 0;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
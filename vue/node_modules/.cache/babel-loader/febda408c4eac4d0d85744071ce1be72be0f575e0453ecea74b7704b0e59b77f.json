{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    // 确认密码验证\n    let validateConfirmPassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.forgotForm.newPassword) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        role: 'ADMIN'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      // 找回密码相关数据\n      forgotPasswordVisible: false,\n      forgotStep: 1,\n      questions: [],\n      forgotForm: {\n        username: '',\n        answer1: '',\n        answer2: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      forgotRules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在3到10个字符内',\n          trigger: 'blur'\n        }],\n        answer1: [{\n          required: true,\n          message: '请输入答案1',\n          trigger: 'blur'\n        }],\n        answer2: [{\n          required: true,\n          message: '请输入答案2',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }, {\n          min: 8,\n          max: 16,\n          message: '长度在8到16个字符内',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请确认新密码',\n          trigger: 'blur'\n        }, {\n          validator: validateConfirmPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    login() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n              this.$router.push('/'); // 跳转主页\n              this.$message.success('登录成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    // 显示找回密码对话框\n    showForgotPassword() {\n      this.forgotPasswordVisible = true;\n      this.forgotStep = 1;\n      this.forgotForm = {\n        username: '',\n        answer1: '',\n        answer2: '',\n        newPassword: '',\n        confirmPassword: ''\n      };\n      this.questions = [];\n    },\n    // 获取安全问题\n    getQuestions() {\n      this.$refs['forgotFormRef'].validateField('username', valid => {\n        if (!valid) {\n          this.$request.post('/getQuestion', {\n            userName: this.forgotForm.username\n          }).then(res => {\n            if (res.code === '200') {\n              this.questions = res.data;\n              this.forgotStep = 2;\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    // 更新密码\n    updatePassword() {\n      this.$refs['forgotFormRef'].validate(valid => {\n        if (valid) {\n          const submitData = {\n            userName: this.forgotForm.username,\n            password: this.forgotForm.newPassword,\n            question: [{\n              question: this.questions[0].question,\n              answer: this.forgotForm.answer1\n            }, {\n              question: this.questions[1].question,\n              answer: this.forgotForm.answer2\n            }]\n          };\n          this.$request.post('/updatePasswordByQuestion', submitData).then(res => {\n            if (res.code === '200') {\n              this.$message.success('密码修改成功');\n              this.forgotPasswordVisible = false;\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validateConfirmPassword","rule","value","callback","Error","forgotForm","newPassword","form","role","rules","username","required","message","trigger","password","forgotPasswordVisible","forgotStep","questions","answer1","answer2","confirmPassword","forgotRules","min","max","validator","created","methods","login","$refs","validate","valid","$request","post","then","res","code","localStorage","setItem","JSON","stringify","$router","push","$message","success","error","msg","showForgotPassword","getQuestions","validateField","userName","updatePassword","submitData","question","answer"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 400px; padding: 30px; background-color: white; border-radius: 5px;\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #333\">欢迎使用</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"role\">\r\n          <el-radio-group v-model=\"form.role\">\r\n            <el-radio label=\"ADMIN\">管理员</el-radio>\r\n            <el-radio label=\"BUSINESS\">商家</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%; background-color: #333; border-color: #333; color: white\" @click=\"login\">登 录</el-button>\r\n        </el-form-item>\r\n        <div style=\"display: flex; align-items: center\">\r\n          <div style=\"flex: 1\"></div>\r\n          <div style=\"flex: 1; text-align: right\">\r\n            <a href=\"javascript:;\" @click=\"showForgotPassword\" v-if=\"form.role === 'BUSINESS'\">找回密码</a>\r\n            <span v-else>&nbsp;</span>\r\n            <span style=\"margin: 0 10px\">|</span>\r\n            <a href=\"/register\">商家注册</a>\r\n          </div>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 找回密码对话框 -->\r\n    <el-dialog title=\"找回密码\" :visible.sync=\"forgotPasswordVisible\" width=\"500px\" :close-on-click-modal=\"false\">\r\n      <el-form :model=\"forgotForm\" :rules=\"forgotRules\" ref=\"forgotFormRef\" label-width=\"100px\">\r\n        <!-- 第一步：输入用户名 -->\r\n        <template v-if=\"forgotStep === 1\">\r\n          <el-form-item label=\"账号\" prop=\"username\">\r\n            <el-input v-model=\"forgotForm.username\" placeholder=\"请输入账号\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"getQuestions\" style=\"width: 100%\">下一步</el-button>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <!-- 第二步：回答安全问题并设置新密码 -->\r\n        <template v-if=\"forgotStep === 2\">\r\n          <div style=\"margin-bottom: 20px; color: #666;\">请回答以下安全问题并设置新密码</div>\r\n          \r\n          <!-- 问题1 -->\r\n          <div style=\"margin: 10px 0; color: #666;\">问题1：{{questions[0].question}}</div>\r\n          <el-form-item label=\"答案1\" prop=\"answer1\">\r\n            <el-input v-model=\"forgotForm.answer1\" placeholder=\"请输入答案1\"></el-input>\r\n          </el-form-item>\r\n\r\n          <!-- 问题2 -->\r\n          <div style=\"margin: 10px 0; color: #666;\">问题2：{{questions[1].question}}</div>\r\n          <el-form-item label=\"答案2\" prop=\"answer2\">\r\n            <el-input v-model=\"forgotForm.answer2\" placeholder=\"请输入答案2\"></el-input>\r\n          </el-form-item>\r\n\r\n          <!-- 新密码 -->\r\n          <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n            <el-input type=\"password\" v-model=\"forgotForm.newPassword\" placeholder=\"请输入新密码\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n            <el-input type=\"password\" v-model=\"forgotForm.confirmPassword\" placeholder=\"请确认新密码\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"updatePassword\" style=\"width: 100%\">确认修改</el-button>\r\n          </el-form-item>\r\n        </template>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    // 确认密码验证\r\n    let validateConfirmPassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.forgotForm.newPassword) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n    return {\r\n      form: { role: 'ADMIN' },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ]\r\n      },\r\n      // 找回密码相关数据\r\n      forgotPasswordVisible: false,\r\n      forgotStep: 1,\r\n      questions: [],\r\n      forgotForm: {\r\n        username: '',\r\n        answer1: '',\r\n        answer2: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      },\r\n      forgotRules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n          { min: 3, max: 10, message: '长度在3到10个字符内', trigger: 'blur' }\r\n        ],\r\n        answer1: [\r\n          { required: true, message: '请输入答案1', trigger: 'blur' }\r\n        ],\r\n        answer2: [\r\n          { required: true, message: '请输入答案2', trigger: 'blur' }\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n          { min: 8, max: 16, message: '长度在8到16个字符内', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请确认新密码', trigger: 'blur' },\r\n          { validator: validateConfirmPassword, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    login() {\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 验证通过\r\n          this.$request.post('/login', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\r\n              this.$router.push('/')  // 跳转主页\r\n              this.$message.success('登录成功')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 显示找回密码对话框\r\n    showForgotPassword() {\r\n      this.forgotPasswordVisible = true\r\n      this.forgotStep = 1\r\n      this.forgotForm = {\r\n        username: '',\r\n        answer1: '',\r\n        answer2: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      }\r\n      this.questions = []\r\n    },\r\n    // 获取安全问题\r\n    getQuestions() {\r\n      this.$refs['forgotFormRef'].validateField('username', (valid) => {\r\n        if (!valid) {\r\n          this.$request.post('/getQuestion', {\r\n            userName: this.forgotForm.username\r\n          }).then(res => {\r\n            if (res.code === '200') {\r\n              this.questions = res.data\r\n              this.forgotStep = 2\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 更新密码\r\n    updatePassword() {\r\n      this.$refs['forgotFormRef'].validate((valid) => {\r\n        if (valid) {\r\n          const submitData = {\r\n            userName: this.forgotForm.username,\r\n            password: this.forgotForm.newPassword,\r\n            question: [\r\n              {\r\n                question: this.questions[0].question,\r\n                answer: this.forgotForm.answer1\r\n              },\r\n              {\r\n                question: this.questions[1].question,\r\n                answer: this.forgotForm.answer2\r\n              }\r\n            ]\r\n          }\r\n          \r\n          this.$request.post('/updatePasswordByQuestion', submitData).then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success('密码修改成功')\r\n              this.forgotPasswordVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/bg.jpg\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\na {\r\n  color: #2a60c9;\r\n  text-decoration: none;\r\n}\r\na:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":";AA+EA;EACAA,IAAA;EACAC,KAAA;IACA;IACA,IAAAC,uBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,UAAA,CAAAC,WAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAI,IAAA;QAAAC,IAAA;MAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACA;MACAE,qBAAA;MACAC,UAAA;MACAC,SAAA;MACAZ,UAAA;QACAK,QAAA;QACAQ,OAAA;QACAC,OAAA;QACAb,WAAA;QACAc,eAAA;MACA;MACAC,WAAA;QACAX,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAS,GAAA;UAAAC,GAAA;UAAAX,OAAA;UAAAC,OAAA;QAAA,EACA;QACAK,OAAA,GACA;UAAAP,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAM,OAAA,GACA;UAAAR,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,WAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAS,GAAA;UAAAC,GAAA;UAAAX,OAAA;UAAAC,OAAA;QAAA,EACA;QACAO,eAAA,GACA;UAAAT,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAW,SAAA,EAAAxB,uBAAA;UAAAa,OAAA;QAAA;MAEA;IACA;EACA;EACAY,QAAA,GAEA;EACAC,OAAA;IACAC,MAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAAzB,IAAA,EAAA0B,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACAC,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAL,GAAA,CAAAnC,IAAA;cACA,KAAAyC,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAV,GAAA,CAAAW,GAAA;YACA;UACA;QACA;MACA;IACA;IACA;IACAC,mBAAA;MACA,KAAA/B,qBAAA;MACA,KAAAC,UAAA;MACA,KAAAX,UAAA;QACAK,QAAA;QACAQ,OAAA;QACAC,OAAA;QACAb,WAAA;QACAc,eAAA;MACA;MACA,KAAAH,SAAA;IACA;IACA;IACA8B,aAAA;MACA,KAAAnB,KAAA,kBAAAoB,aAAA,aAAAlB,KAAA;QACA,KAAAA,KAAA;UACA,KAAAC,QAAA,CAAAC,IAAA;YACAiB,QAAA,OAAA5C,UAAA,CAAAK;UACA,GAAAuB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAlB,SAAA,GAAAiB,GAAA,CAAAnC,IAAA;cACA,KAAAiB,UAAA;YACA;cACA,KAAA0B,QAAA,CAAAE,KAAA,CAAAV,GAAA,CAAAW,GAAA;YACA;UACA;QACA;MACA;IACA;IACA;IACAK,eAAA;MACA,KAAAtB,KAAA,kBAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,MAAAqB,UAAA;YACAF,QAAA,OAAA5C,UAAA,CAAAK,QAAA;YACAI,QAAA,OAAAT,UAAA,CAAAC,WAAA;YACA8C,QAAA,GACA;cACAA,QAAA,OAAAnC,SAAA,IAAAmC,QAAA;cACAC,MAAA,OAAAhD,UAAA,CAAAa;YACA,GACA;cACAkC,QAAA,OAAAnC,SAAA,IAAAmC,QAAA;cACAC,MAAA,OAAAhD,UAAA,CAAAc;YACA;UAEA;UAEA,KAAAY,QAAA,CAAAC,IAAA,8BAAAmB,UAAA,EAAAlB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAO,QAAA,CAAAC,OAAA;cACA,KAAA5B,qBAAA;YACA;cACA,KAAA2B,QAAA,CAAAE,KAAA,CAAAV,GAAA,CAAAW,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}